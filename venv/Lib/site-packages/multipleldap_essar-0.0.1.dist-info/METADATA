Metadata-Version: 2.1
Name: multipleldap-essar
Version: 0.0.1
Summary: Package to authenticate against Multiple LDAP servers
Home-page: UNKNOWN
Author: Essar IT
Author-email: Tejas.patel1@acerinox.in
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: ldap3

Multiple LDAP Server Authentication

- Requirements :-
    - Python ldap3

1> Introduction :-

Basically, the library authenticates the user against the given LDAP servers Chronologically,
bifurcating the users from given servers.

Also, in case of the requirement to connect and authenticate on both the servers (AND authentication ) for the given user.

The modules included in the library are :

	- MultiLDAPAuthenticator.py

	- connection.py

	- config.py




Brief Description : -

1 > MultiLDAPAuthenticator.py:

- Module authenticates the user against LDAP servers chronologically with given username and password

	- class LDAPServer:
	 	- Creates the Server Objects with arguments ‘domain’ , ‘host’, ‘port’ 

	- class MultipleLDAPAuthenticator():
		-  def authenticate(self, username, password):
			- Actual Authenticates the User, initially trying first server, if raised 			    Exception, i.e username doesnt exist in first sever / invalid 				    Credentials, trying for the Second Server.
			-   Returns the Connection parameters for the given user authentication.


2> connection.py:

- Module makes connection to the LDAP servers using the ldap3 ‘server’ and ‘connection’ objects.


3> config.py:

- Ldap Server Configuration for Multiple Authentication i.e domain, Host, port,
- In case, of any changes in Servers, just change this file for server configuration.





Example Usage :- 

Step -1 :
	- Install the “multiple_ldap” Package(.whl),  in your project.

Step -2:-
	- Import the Two Mandatory Modules for the authentication to work :-
		- from multipleldap_essar.config import configuration
		- from multipleldap_essar.MultiLDAPAuthenticator import 				  MultipleLDAPAuthenticator

Step -3 :-
	 - Call the “configuration()”, Once in your project/app, to configure the Ldap 	servers.

Step -4:-

	- Call the authenticate(username,password) from MultipleLDAPAuthenticator to start  	   authenticating against different server’s
	- i.e 
	authenticator = MultipleLDAPAuthenticator()
	res = authenticator.authenticate("<username>", "<password>")
Step -5:- (Optional)

	- Search and filter, after the connection is successful.
	- entries = authenticator.searchfilter(res[1], base, filter, 	attributes=['distinguishedName', 'cn', 'sn', 'mailNickname'])
	for i in entries:
   		 print(i)
	- User needs to apply their own base and filter, and attributes=[<your attributes>]
	- Returns the list of the entries.

Note :-
	- The authenticator Response the Dictionary, with the status “Success” or “Failure”.


2> Django Auth ldap :-

For the Django Applications, to authenticate against the multiple LDAP servers, following settings have to be included in the ‘settings.py’ file of the project level:-

	- To be included in the settings.py file:-
	- Initially, import the modules:-

	- settings.py:-

	  from django_auth_ldap.config import LDAPSearch
	 import ldap


	AUTHENTICATION_BACKENDS=["django_auth_ldap.backend.LDAPBackend"]
	# for the inbuilt django-auth-ldap authentication
 OR
	AUTHENTICATION_BACKENDS = ["api.backend.CustomLDAPBackend"]
	# for Custom ldap authentication, generally for pre and post
	  authentication hooks.

	AUTH_LDAP_SERVER_URI = 	"ldap://172.24.102.200:389/ldap://172.24.102.200:389/"

	AUTH_LDAP_BIND_DN = “<DN for initial Binding to the servers >”
	AUTH_LDAP_BIND_PASSWORD= "<password for the initial bining user>"
	AUTH_LDAP_USER_SEARCH = LDAPSearch("DC=srhouse,DC=com",           	ldap.SCOPE_SUBTREE, "(&(objectClass=user)(mailNickname=%  	(user)s))")
	AUTH_LDAP_CONNECTION_OPTIONS={
                    ldap.OPT_NETWORK_TIMEOUT : 10,
                    ldap.OPT_DEBUG_LEVEL: 0,
                    ldap.OPT_REFERRALS: 0,
	             }
	AUTH_LDAP_USER_ATTR_MAP = {
    			'first_name': 'mailNickname',
    			'last_name': 'sn',
    			'email': 'mail',
			 }
	- Note :- 
	- Currently, the ldap authentication backend works only for the Essar Employees.
	- Brief Information :-
	-  AUTHENTICATION_BACKENDS :
	   Provides the backend class to be used for authentication, i.e custom authentication 	   or the django-auth-ldap inbuilt authentication.
	   For, Custom ldap Authentication refer the django_auth_ldap official documentation
	-  AUTH_LDAP_SERVER_URI :
	 Provide the URI for the ldap servers, in case of the multiple ldap servers, provide 	  the space separated URI for servers as shown above, Django auth ldap will try to 	  authneticate the user for the given user chronologically, i.e if the first server fails 	  will automatically try to authenticate against the other given server URI.
	-  AUTH_LDAP_BIND_DN :
	 Provide the Distinguished name (DN) for the Initial binding to the ldap sever, as 	  we’re having the search and bind approach for the ldap authentication in django
	  i.e : "CN=Patel\, Tejas - EStIL- IT (HAZ),OU=Users,OU=Steel,OU=Users,OU=HaziraOU,DC=srhouse,DC=com"

	-  AUTH_LDAP_BIND_PASSWORD :
	  Provide the password for the given DN (distingushed name)
	- AUTH_LDAP_USER_SEARCH = LDAPSearch("DC=srhouse,DC=com", 		 	 ldap.SCOPE_SUBTREE, "(&(objectClass=user)(mailNickname=%	   	 	 (user)s))")
	 Provide the search query, for searching the user in ldap servers, here, 	  	 	  ‘mailnickname’ is the attribute in the DIS of ldap server, Currently the query 	 	  searches in the “DC=srhouse,DC=com”
	-  AUTH_LDAP_CONNECTION_OPTIONS :
	 Provide the connection options, for ldap connection, i.e  	  		 		  ldap.OPT_NETWORK_TIMEOUT : 10, will wait for the 10 sec for server 1 to 		  connect, then automatically redirects to second server, in case of multiple ldap 		  Authentication
	-  AUTH_LDAP_USER_ATTR_MAP :
	 Provide the attibutes mapping, for the ldap user to django user when connects 	 	  initially.



- Release Notes :-
    - version 0.0.1
        - Authenticates against Multiple ldap servers
        - Returns Invalid Credentials And Server Down Exception


